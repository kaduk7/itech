// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url = env("POSTGRES_PRISMA_URL") // uses connection pooling
//   directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BarangTb {
  id         Int      @id @default(autoincrement())
  kodeBarang String   @unique
  namaBarang String
  kategoriId Int
  merek      String
  unit       String
  hargaModal Int
  hargaJual  Int
  stok       Int
  foto       String?
  deskripsi  String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  KategoriTb         KategoriTb           @relation(fields: [kategoriId], references: [id], onDelete: Cascade)
  DetailtambahstokTb DetailtambahstokTb[]
  // detailTransaksiTb  DetailTransaksiTb[]
  DetailPenjualanTb  DetailPenjualanTb[]
}

model KategoriTb {
  id        Int      @id @default(autoincrement())
  nama      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  BarangTb BarangTb[]
}

model TambahstokTb {
  id         Int      @id @default(autoincrement())
  tanggal    DateTime
  admin      String
  totalItem  Int
  totalBayar Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  DetailtambahstokTb DetailtambahstokTb[]
}

model DetailtambahstokTb {
  id           Int      @id @default(autoincrement())
  barangId     Int
  tambahstokId Int
  hargaModal   Int
  hargaJual    Int
  qty          Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  BarangTb     BarangTb     @relation(fields: [barangId], references: [id], onDelete: Cascade)
  TambahstokTb TambahstokTb @relation(fields: [tambahstokId], references: [id], onDelete: Cascade)
}

// model TransaksiTB {
//   id         Int      @id @default(autoincrement())
//   nofaktur   String   @unique
//   tanggal    DateTime
//   kasir      String
//   totalItem  Int
//   totalBayar Int
//   createdAt  DateTime @default(now())
//   updatedAt  DateTime @updatedAt

//   detailTransaksiTb DetailTransaksiTb[]
// }

// model DetailTransaksiTb {
//   id          Int      @id @default(autoincrement())
//   barangId    Int
//   transaksiId Int
//   hargaModal  Int
//   hargaJual   Int
//   qty         Int
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt

//   BarangTb    BarangTb    @relation(fields: [barangId], references: [id], onDelete: Cascade)
//   TransaksiTB TransaksiTB @relation(fields: [transaksiId], references: [id], onDelete: Cascade)
// }

model KaryawanTb {
  id           Int      @id @default(autoincrement())
  nama         String
  tempatLahir  String
  tanggalLahir DateTime
  alamat       String
  hp           String   @unique
  email        String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  UserTb UserTb?
}

model UserTb {
  id         Int      @id @default(autoincrement())
  karyawanId Int      @unique
  usernama   String   @unique
  password   String
  status     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  KaryawanTb KaryawanTb @relation(fields: [karyawanId], references: [id], onDelete: Cascade)
}

model PenjualanTb {
  id         Int      @id @default(autoincrement())
  nofaktur   String   @unique
  tanggal    DateTime
  kasir      String
  totalItem  Int
  totalBayar Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  DetailPenjualanTb DetailPenjualanTb[]
}

model DetailPenjualanTb {
  id          Int      @id @default(autoincrement())
  barangId    Int
  penjualanId Int
  hargaModal  Int
  hargaJual   Int
  qty         Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  BarangTb    BarangTb    @relation(fields: [barangId], references: [id], onDelete: Cascade)
  PenjualanTb PenjualanTb @relation(fields: [penjualanId], references: [id], onDelete: Cascade)
}

model ServisTb {
  id             Int      @id @default(autoincrement())
  kodeServis     String
  tanggal        DateTime
  nama           String
  alamat         String
  hp             String
  namaBarang     String
  noSeri         String
  perlengkapan   String
  jenis          String
  detailSoftware String
  detailHardware String
  status         String
  namaTeknisi    String
  biayaSoftware  Int?
  biayaHardware  Int?
  biayaCancel    Int?
  keterangan     String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
